{"version":3,"sources":["Header/Nav/Nav.tsx","Header/Header.tsx","store.ts","Pages/Home/Home.tsx","Pages/About/About.tsx","dashboard-types/AmountDashboard/AmountDashboardComponent.tsx","dashboard-types/DailyDashboard/DailyDashboardComponent.tsx","Pages/Dashboard/DashboardPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Nav","dashboards","useSelector","state","userData","dashboardEls","map","dashboard","to","id","name","className","styles","length","Header","Button","href","src","alt","readUserData","userDataString","localStorage","getItem","JSON","parse","dashboardNextId","initialState","userDataSlice","createSlice","reducers","addDashboard","action","Object","assign","payload","push","stringify","setItem","editDashboard","removeDashboard","filter","actions","store","configureStore","reducer","Home","dispatch","useDispatch","useState","isAddDialogOpen","setIsAddDialogOpen","dashboardNameInput","setDashboardNameInput","editingDashboard","setEditingDashboard","handleNameInputChange","event","target","value","newDashboard","kind","ButtonGroup","color","size","onClick","openEditDashboardDialog","handleRemoveDashboard","variant","Dialog","open","onClose","DialogTitle","TextField","label","onChange","List","ListSubheader","ListItem","button","ListItemText","primary","disabled","About","AmountDashboardComponent","props","AmountDashboard","data","DailyDashboardComponent","DailyDashboard","DashboardPage","useParams","currentDashboard","find","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b6b9b24.chunk.js","sourcesContent":["import styles from './Nav.module.scss';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../store';\r\n\r\nconst Nav = () => {\r\n  const dashboards = useSelector((state: RootState) => state.userData.dashboards);\r\n\r\n  const dashboardEls = dashboards.map((dashboard) => (\r\n    <li>\r\n      <NavLink to={`/dashboard/${dashboard.id}`}>\r\n        {dashboard.name}\r\n      </NavLink>\r\n    </li>\r\n  ));\r\n\r\n  return (\r\n    <nav className={styles.Nav}>\r\n      <ul>\r\n        <li>\r\n          <NavLink to=\"/\">home </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/about\">about</NavLink>\r\n        </li>\r\n        {dashboards.length ? dashboardEls : null}\r\n      </ul>\r\n    </nav>\r\n  )\r\n};\r\n\r\nexport default Nav;\r\n","import { Button } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport React from 'react';\r\nimport styles from './Header.module.scss';\r\nimport Nav from './Nav/Nav';\r\n\r\nconst Header = () => (\r\n  <header className={styles.Header}>\r\n    <Button aria-label=\"Button to open the menu\">\r\n      <MenuIcon></MenuIcon>\r\n    </Button>\r\n\r\n    <a href=\".\" className=\"logo\">\r\n      <img src=\"\" alt=\"\"></img>\r\n    </a>\r\n\r\n    <Nav />\r\n    <button mat-button>\r\n      log-in/sign-up\r\n    </button>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import { configureStore } from '@reduxjs/toolkit'\r\n\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { Dashboard, UserData } from './UserData';\r\n\r\nfunction readUserData() {\r\n  const userDataString = localStorage.getItem('userData')\r\n  if (userDataString) {\r\n    return JSON.parse(userDataString);\r\n  }\r\n\r\n  return {\r\n    dashboardNextId: 0,\r\n    dashboards: []\r\n  };\r\n}\r\n\r\nconst initialState: UserData = readUserData();\r\n\r\nconst userDataSlice = createSlice({\r\n  name: 'userData',\r\n  initialState,\r\n  reducers: {\r\n    addDashboard: (state, action: PayloadAction<Dashboard>) => {\r\n      // Read user data again in case it has updated.\r\n      const userData = readUserData();\r\n      Object.assign(state, userData);\r\n\r\n      // Add the new dashboard.\r\n      action.payload.id = `${state.dashboardNextId}`;\r\n      state.dashboardNextId++;\r\n      state.dashboards.push(action.payload);\r\n\r\n      // Save the user data.\r\n      const userDataString = JSON.stringify(state);\r\n      localStorage.setItem('userData', userDataString);\r\n    },\r\n    editDashboard: (state, action: PayloadAction<Dashboard>) => {\r\n      // Read user data again in case it has updated.\r\n      const userData = readUserData();\r\n      Object.assign(state, userData);\r\n\r\n      // Replace the existing dashboard.\r\n      state.dashboards = state.dashboards.map(dashboard => {\r\n        if (dashboard.id === action.payload.id) {\r\n          return action.payload;\r\n        }\r\n        return dashboard;\r\n      });\r\n\r\n      // Save the user data.\r\n      const userDataString = JSON.stringify(state);\r\n      localStorage.setItem('userData', userDataString);\r\n    },\r\n    removeDashboard: (state, action: PayloadAction<Dashboard>) => {\r\n      // Read user data again in case it has updated.\r\n      const userData = readUserData();\r\n      Object.assign(state, userData);\r\n\r\n      // Remove the matching dashboard.\r\n      state.dashboards = state.dashboards.filter(dashboard => dashboard.id !== action.payload.id);\r\n\r\n      // Save the user data.\r\n      const userDataString = JSON.stringify(state);\r\n      localStorage.setItem('userData', userDataString);\r\n    },\r\n  }\r\n});\r\n\r\nexport const { addDashboard, editDashboard, removeDashboard } = userDataSlice.actions;\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    userData: userDataSlice.reducer,\r\n  }\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch","import { ButtonGroup, List, ListSubheader } from '@material-ui/core';\r\nimport { Button, Dialog, DialogTitle, ListItem, ListItemText } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { ChangeEvent, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addDashboard, editDashboard, removeDashboard, RootState } from '../../store';\r\nimport { Dashboard } from '../../UserData';\r\nimport styles from './Home.module.scss';\r\nimport { TextField } from '@material-ui/core';\r\n\r\nconst Home = () => {\r\n  const dashboards = useSelector((state: RootState) => state.userData.dashboards);\r\n  const dispatch = useDispatch();\r\n  const [isAddDialogOpen, setIsAddDialogOpen] = useState(false);\r\n\r\n  const [dashboardNameInput, setDashboardNameInput] = useState('');\r\n  const [editingDashboard, setEditingDashboard] = useState<Dashboard | null>(null);\r\n\r\n  const openAddDashboardDialog = () => {\r\n    setIsAddDialogOpen(true);\r\n  };\r\n\r\n  const openEditDashboardDialog = (dashboard: Dashboard) => {\r\n    setEditingDashboard(dashboard);\r\n    setDashboardNameInput(dashboard.name);\r\n  };\r\n\r\n  const submitDashboardEdit = () => {\r\n    if (editingDashboard) {\r\n      dispatch(editDashboard({...editingDashboard, name: dashboardNameInput}));\r\n      setDashboardNameInput('');\r\n      setEditingDashboard(null);\r\n    }\r\n  };\r\n\r\n  const handleNameInputChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target) {\r\n      setDashboardNameInput(event.target.value);\r\n    }\r\n  };\r\n\r\n  const handleRemoveDashboard = (dashboard: Dashboard) => {\r\n    dispatch(removeDashboard(dashboard));\r\n  }\r\n\r\n  const newDashboard = (kind: Dashboard[\"kind\"]) => {\r\n    dispatch(addDashboard({ name: dashboardNameInput, kind }));\r\n    setDashboardNameInput('');\r\n    setIsAddDialogOpen(false);\r\n  }\r\n\r\n  const dashboardEls = dashboards.map((dashboard) => (\r\n    <li>\r\n      <Link to={`/dashboard/${dashboard.id}`}>\r\n        {dashboard.name}\r\n      </Link>{\" \"}\r\n      <ButtonGroup color=\"primary\" size=\"small\" aria-label=\"Edit and remove dashboard button group\">\r\n        <Button onClick={() => openEditDashboardDialog(dashboard)}>Edit</Button>\r\n        <Button onClick={() => handleRemoveDashboard(dashboard)}>Remove</Button>\r\n      </ButtonGroup>\r\n    </li>\r\n  ));\r\n\r\n  return (<div className={styles.Home}>\r\n    <h1>My Dashboards</h1>\r\n    {dashboards.length ? <ul>{dashboardEls}</ul> : <p>No dashboards to show.</p>}\r\n    <Button variant=\"contained\" color=\"primary\" onClick={openAddDashboardDialog}>\r\n      Add a new dashboard\r\n    </Button>\r\n\r\n    {/* Add Dashboard dialog */}\r\n    <Dialog open={isAddDialogOpen} onClose={() => setIsAddDialogOpen(false)}>\r\n      <DialogTitle>Add Dashboard</DialogTitle>\r\n      <TextField id=\"add-dashboard-name\" label=\"Dashboard Name\" onChange={handleNameInputChange} />\r\n      <List>\r\n        <ListSubheader>Dashboard Type</ListSubheader>\r\n        <ListItem button onClick={() => newDashboard('amount')}>\r\n          <ListItemText primary=\"Amount Dashboard\" />\r\n        </ListItem>\r\n        <ListItem button onClick={() => newDashboard('daily')}>\r\n          <ListItemText primary=\"Daily Dashboard\" />\r\n        </ListItem>\r\n      </List>\r\n    </Dialog>\r\n\r\n    {/* Edit Dashboard dialog */}\r\n    <Dialog open={!!editingDashboard} onClose={() => setEditingDashboard(null)}>\r\n      <DialogTitle>Edit Dashboard</DialogTitle>\r\n      <TextField id=\"edit-dashboard-name\" label=\"Dashboard Name\" value={dashboardNameInput} onChange={handleNameInputChange} />\r\n      <Button onClick={submitDashboardEdit} disabled={!dashboardNameInput}>Submit</Button>\r\n    </Dialog>\r\n\r\n  </div>);\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport styles from './About.module.scss';\n\nconst About = () => (\n  <div className={styles.About}>\n    About Component\n  </div>\n);\n\nexport default About;\n","import React from 'react';\r\nimport styles from './AmountDashboard.module.scss';\r\nimport { AmountDashboard } from '../../UserData';\r\n\r\ninterface Props {\r\n  data: AmountDashboard;\r\n}\r\n\r\nconst AmountDashboardComponent = (props: Props) => (\r\n  <div className={styles.AmountDashboard}>\r\n    <div className=\"wrapper\">\r\n      <h2>{props.data.name}</h2>\r\n      <div className=\"dashboardNav\">\r\n        <button>back</button>\r\n        <h3>this week</h3>\r\n        <button>forward</button>\r\n        <button>calendar</button>\r\n      </div>\r\n\r\n      <figure>\r\n        <figcaption>graph</figcaption>\r\n      </figure>\r\n\r\n      <button>add run</button>\r\n\r\n      <table>\r\n        <tr>\r\n          <td>total this week</td>\r\n          <td>21 hrs</td>\r\n        </tr>\r\n        <tr>\r\n          <td>increase since last week</td>\r\n          <td>+20%</td>\r\n        </tr>\r\n        <tr>\r\n          <td>average per day</td>\r\n          <td>3 hrs</td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default AmountDashboardComponent;\r\n","import React from 'react';\r\nimport { DailyDashboard } from '../../UserData';\r\nimport styles from './DailyDashboard.module.scss';\r\n\r\ninterface Props {\r\n  data: DailyDashboard;\r\n}\r\n\r\nconst DailyDashboardComponent = (props: Props) => (\r\n  <div className={styles.DailyDashboard}>\r\n    <div className=\"wrapper\">\r\n      <h2>{props.data.name}</h2>\r\n      <div className=\"dashboardNav\">\r\n        <button>back</button>\r\n        <h3>this month</h3>\r\n        <button>forward</button>\r\n        <button>calendar</button>\r\n      </div>\r\n\r\n      <table className=\"calendar\">\r\n        <tr>\r\n          <th>sun</th>\r\n          <th>mon</th>\r\n          <th>tue</th>\r\n          <th>wed</th>\r\n          <th>thu</th>\r\n          <th>fri</th>\r\n          <th>sat</th>\r\n        </tr>\r\n        <tr>\r\n          <td></td>\r\n          <td></td>\r\n          <td></td>\r\n          <td></td>\r\n          <td></td>\r\n          <td></td>\r\n          <td>1</td>\r\n        </tr>\r\n        <tr>\r\n          <td>2</td>\r\n          <td>3</td>\r\n          <td>4</td>\r\n          <td>5</td>\r\n          <td>6</td>\r\n          <td>7</td>\r\n          <td>8</td>\r\n        </tr>\r\n        <tr>\r\n          <td>9</td>\r\n          <td>10</td>\r\n          <td>11</td>\r\n          <td>12</td>\r\n          <td>13</td>\r\n          <td>14</td>\r\n          <td>15</td>\r\n        </tr>\r\n        <tr>\r\n          <td>16</td>\r\n          <td>17</td>\r\n          <td>18</td>\r\n          <td>19</td>\r\n          <td>20</td>\r\n          <td>21</td>\r\n          <td>22</td>\r\n        </tr>\r\n        <tr>\r\n          <td>23</td>\r\n          <td>24</td>\r\n          <td>25</td>\r\n          <td>26</td>\r\n          <td>27</td>\r\n          <td>28</td>\r\n          <td>29</td>\r\n        </tr>\r\n        <tr>\r\n          <td>30</td>\r\n          <td>31</td>\r\n          <td></td>\r\n          <td></td>\r\n          <td></td>\r\n          <td></td>\r\n          <td></td>\r\n        </tr>\r\n      </table>\r\n\r\n      <table>\r\n        <tr>\r\n          <td>total this month</td>\r\n          <td>21 hrs</td>\r\n        </tr>\r\n        <tr>\r\n          <td>increase since last month</td>\r\n          <td>+20%</td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default DailyDashboardComponent;\r\n","import styles from './DashboardPage.module.scss';\r\nimport AmountDashboardComponent from '../../dashboard-types/AmountDashboard/AmountDashboardComponent';\r\nimport DailyDashboardComponent from '../../dashboard-types/DailyDashboard/DailyDashboardComponent';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../store';\r\n\r\n\r\nconst DashboardPage = () => {\r\n  const { id } = useParams<{ id:string }>();\r\n  const dashboards = useSelector((state: RootState) => state.userData.dashboards);\r\n  const currentDashboard = dashboards.find(dashboard => dashboard.id === id);\r\n  \r\n  if (!currentDashboard) {\r\n    return <p>cannot find dashboard with id</p>;\r\n  }\r\n  \r\n  switch (currentDashboard.kind) {\r\n    case 'amount':\r\n      return <AmountDashboardComponent \r\n        data={currentDashboard}\r\n      />\r\n    case 'daily':\r\n      return <DailyDashboardComponent\r\n        data={currentDashboard}\r\n      />\r\n    default:\r\n      return <div className={styles.DashboardPage}>Dashboard Component</div>\r\n  }\r\n};\r\n\r\nexport default DashboardPage;\r\n","import { Route, Switch } from 'react-router-dom';\r\nimport Header from './Header/Header';\r\nimport Home from './Pages/Home/Home';\r\nimport About from './Pages/About/About';\r\nimport DashboardPage from './Pages/Dashboard/DashboardPage';\r\nimport './App.scss';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header></Header>\r\n      <Switch>\r\n        <Route path=\"/dashboard/:id\" component={DashboardPage} />\r\n        <Route path=\"/about\" component={About} />\r\n        <Route path=\"/\" component={Home} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store';\r\n\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <React.StrictMode>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </React.StrictMode>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}